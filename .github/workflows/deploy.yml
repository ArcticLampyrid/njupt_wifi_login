name: Deploy

on:
  push:
    branches: 
      - main
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches: 
      - main
  workflow_dispatch:

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  generate-release-notes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: latest
      - run: npx changelogithub ${{ github.event_name == 'push' && github.ref_type == 'tag' && '--draft' || '--dry'}}
        env:
          GITHUB_TOKEN: ${{ github.token }}

  deploy-win:
    runs-on: windows-latest
    needs: 
    - generate-release-notes
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - name: Build (Release)
      shell: pwsh
      run: cargo build --release --verbose
    - name: Package
      shell: pwsh
      run: |
        $version = git describe --tags --dirty --always
        $unpacked_dir = "unpacked/njupt_wifi_login"
        New-Item -ItemType Directory -Force -Path $unpacked_dir
        Copy-Item -Path "target/release/*.exe" -Destination $unpacked_dir
        New-Item -ItemType Directory -Force -Path "release"
        7z a -mx=9 -ms=on "release\njupt_wifi_login-${version}-win-x86_64.7z" "unpacked\*"
    - name: Release (GitHub)
      if: github.event_name == 'push' && github.ref_type == 'tag'
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        draft: true
        omitBody: true
        artifacts: "release/*"
  
  deploy-linux:
    strategy:
      matrix:
        release_name:
          - "linux-x86_64"
        include:
          - release_name: "linux-x86_64"
            os: ubuntu-latest
    runs-on: ${{ matrix.os }}
    needs: 
    - generate-release-notes
    steps:
    - uses: actions/checkout@v4
    - uses: dtolnay/rust-toolchain@stable
    - name: Install libgtk
      run: | 
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev
    - name: Build (Release)
      run: cargo build --release --verbose
    - name: Package
      run: |
        version=$(git describe --tags --dirty --always)
        unpacked_dir=unpacked/njupt_wifi_login
        mkdir -p $unpacked_dir
        cp target/release/njupt_wifi_login $unpacked_dir
        cp target/release/njupt_wifi_login_configurator $unpacked_dir
        mkdir -p release
        tar -czf release/njupt_wifi_login-${version}-${{ matrix.release_name }}.tar.gz -C unpacked .
    - name: Release (GitHub)
      if: github.event_name == 'push' && github.ref_type == 'tag'
      uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        draft: true
        omitBody: true
        artifacts: "release/*"

  deploy-linux-musl:
    strategy:
      matrix:
        release_name:
          - "linux-x86_64-musl"
        include:
          - release_name: "linux-x86_64-musl"
            image: rust:alpine
            dependencies: musl-dev gtk+3.0-dev
    runs-on: ubuntu-latest
    needs: 
    - generate-release-notes
    container:
      image: ${{ matrix.image }}
    steps:
      - name: Prepare environment
        run: |
          apk add git ${{ matrix.dependencies }}
          git config --global --add safe.directory $GITHUB_WORKSPACE
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build (Release)
        run: cargo build --release --verbose
        env:
          RUSTFLAGS: '-C target-feature=-crt-static'
      - name: Package
        run: |
          version=$(git describe --tags --dirty --always)
          unpacked_dir=unpacked/njupt_wifi_login
          mkdir -p $unpacked_dir
          cp target/release/njupt_wifi_login $unpacked_dir
          cp target/release/njupt_wifi_login_configurator $unpacked_dir
          mkdir -p release
          tar -czf release/njupt_wifi_login-${version}-${{ matrix.release_name }}.tar.gz -C unpacked .
      - name: Release (GitHub)
        if: github.event_name == 'push' && github.ref_type == 'tag'
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          draft: true
          omitBody: true
          artifacts: "release/*"

  publish-release:
    if: github.event_name == 'push' && github.ref_type == 'tag'
    runs-on: ubuntu-latest
    needs:
    - deploy-win
    - deploy-linux
    - deploy-linux-musl
    steps:
      - name: Release (GitHub)
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          draft: false
          omitBody: true
